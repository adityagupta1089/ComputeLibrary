# To display the perf.data header info, please use --header/--header-only options.
#
#
# Total Lost Samples: 0
#
# Samples: 8K of event 'cpu-clock'
# Event count (approx.): 86363635500
#
# Overhead  Command         Shared Object            Symbol                                                                                                                                                                                                                                                                                                                                                                           
# ........  ..............  .......................  .................................................................................................................................................................................................................................................................................................................................................................................
#
    70.36%  graph_resnet50  libarm_compute_core.so   [.] arm_gemm::a64_sgemm_asimd_12x8_jumps
     8.07%  graph_resnet50  libarm_compute_core.so   [.] arm_compute::NEGEMMInterleavedMatrixMultiplyWrapperTemplate<float, float, false>::transform
     6.22%  graph_resnet50  libarm_compute_core.so   [.] arm_compute::NEIm2ColKernel::run_generic<float, true>
     5.05%  graph_resnet50  libarm_compute_core.so   [.] arm_compute::NEGEMMInterleavedTransformAWrapperTemplate<float, false>::transform
     2.46%  graph_resnet50  libarm_compute_core.so   [.] arm_compute::NEBatchNormalizationLayerKernel::batch_normalization_fp32_nhwc<false, arm_compute::detail::dummy<float, 4> >
     2.02%  graph_resnet50  libarm_compute_core.so   [.] (anonymous namespace)::add_F32_F32_F32
     1.47%  graph_resnet50  libarm_compute_core.so   [.] arm_compute::NEBatchNormalizationLayerKernel::batch_normalization_fp32_nhwc<true, arm_compute::detail::relu<float, 4> >
     1.16%  graph_resnet50  libarm_compute_core.so   [.] arm_compute::NEPoolingLayerKernel::poolingMxN_f32_nhwc<(arm_compute::PoolingType)0, false>
     0.75%  graph_resnet50  libarm_compute_core.so   [.] (anonymous namespace)::weights_reshape<unsigned int, true>
     0.57%  graph_resnet50  libarm_compute_core.so   [.] arm_compute::NEActivationLayerKernel::activation<(arm_compute::ActivationLayerInfo::ActivationFunction)2, float>
     0.35%  graph_resnet50  libarm_compute_core.so   [.] arm_gemm::a64_sgemv_pretransposed
     0.26%  graph_resnet50  libarm_compute_core.so   [.] arm_gemm::a64_sgemm_native_16x4
     0.16%  graph_resnet50  libarm_compute.so        [.] arm_compute::NEGEMM::~NEGEMM@plt
     0.16%  graph_resnet50  libc-2.24.so             [.] __GI_memset
     0.11%  graph_resnet50  libarm_compute.so        [.] arm_compute::ITensorAllocator::info
     0.09%  graph_resnet50  libarm_compute_core.so   [.] arm_compute::NEGEMMInterleavedPrepareBWrapperKernelTemplate<float, false>::transform
     0.08%  graph_resnet50  libarm_compute.so        [.] arm_compute::Tensor::info
     0.06%  graph_resnet50  [kernel.kallsyms]        [k] _raw_spin_unlock_irqrestore
     0.06%  graph_resnet50  [kernel.kallsyms]        [k] clear_page
     0.05%  graph_resnet50  [kernel.kallsyms]        [k] get_page_from_freelist
     0.04%  graph_resnet50  [kernel.kallsyms]        [k] handle_mm_fault
     0.04%  graph_resnet50  [kernel.kallsyms]        [k] sys_getcpu
     0.04%  graph_resnet50  libarm_compute_core.so   [.] arm_compute::NEPoolingLayerKernel::poolingMxN_f32_nhwc<(arm_compute::PoolingType)1, false>
     0.02%  graph_resnet50  [kernel.kallsyms]        [k] el0_da
     0.02%  graph_resnet50  [kernel.kallsyms]        [k] vmacache_find
     0.02%  graph_resnet50  ld-2.24.so               [.] _dl_lookup_symbol_x
     0.02%  graph_resnet50  libarm_compute_core.so   [.] arm_compute::TensorInfo::offset_element_in_bytes
     0.02%  graph_resnet50  libarm_compute_core.so   [.] arm_gemm::GemvPretransposed<arm_gemm::sgemv_pretransposed, float, float>::pretranspose_B_array
     0.01%  graph_resnet50  [kernel.kallsyms]        [k] __page_set_anon_rmap
     0.01%  graph_resnet50  [kernel.kallsyms]        [k] mem_cgroup_try_charge
     0.01%  graph_resnet50  [kernel.kallsyms]        [k] page_remove_rmap
     0.01%  graph_resnet50  [kernel.kallsyms]        [k] up_read
     0.01%  graph_resnet50  graph_resnet50           [.] std::__detail::_BracketMatcher<std::__cxx11::regex_traits<char>, false, false>::_M_ready
     0.01%  graph_resnet50  graph_resnet50           [.] std::__detail::_Executor<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::regex_traits<char>, true>::_M_dfs
     0.01%  graph_resnet50  libarm_compute.so        [.] arm_compute::CPPScheduler::get
     0.01%  graph_resnet50  libarm_compute.so        [.] arm_compute::NEGEMM::run
     0.01%  graph_resnet50  libarm_compute.so        [.] arm_compute::NEGEMMConvolutionLayer::run
     0.01%  graph_resnet50  libarm_compute.so        [.] arm_compute::TensorAllocator::data
     0.01%  graph_resnet50  libarm_compute.so        [.] std::_Function_handler<void (arm_compute::ThreadInfo const&), arm_compute::NEGEMMInterleavedWrapper::prepare()::{lambda(arm_compute::ThreadInfo const&)#1}>::_M_invoke
     0.01%  graph_resnet50  libarm_compute.so        [.] std::_Sp_counted_ptr_inplace<arm_compute::MemoryRegion, std::allocator<arm_compute::MemoryRegion>, (__gnu_cxx::_Lock_policy)2>::_M_dispose
     0.01%  graph_resnet50  libarm_compute_core.so   [.] arm_compute::(anonymous namespace)::logits_1d_max<float>
     0.01%  graph_resnet50  libarm_compute_core.so   [.] arm_compute::(anonymous namespace)::logits_1d_softmax_float<float>
     0.01%  graph_resnet50  libarm_compute_core.so   [.] arm_compute::CPUInfo::get_cpu_model
     0.01%  graph_resnet50  libarm_compute_core.so   [.] arm_compute::TensorInfo::clone
     0.01%  graph_resnet50  libarm_compute_core.so   [.] arm_gemm::find_implementation<unsigned char, unsigned int>@plt
     0.01%  graph_resnet50  libarm_compute_graph.so  [.] arm_compute::graph::ExecutionTask::operator()
     0.01%  graph_resnet50  libarm_compute_graph.so  [.] arm_compute::graph::INode::input
     0.01%  graph_resnet50  libarm_compute_graph.so  [.] arm_compute::graph::detail::call_all_tasks
     0.01%  graph_resnet50  libc-2.24.so             [.] _int_malloc
     0.01%  graph_resnet50  libstdc++.so.6.0.22      [.] std::_Rb_tree_increment


#
# (Tip: To see callchains in a more compact form: perf report -g folded)
#
