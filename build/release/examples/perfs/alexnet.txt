# To display the perf.data header info, please use --header/--header-only options.
#
#
# Total Lost Samples: 0
#
# Samples: 2K of event 'cpu-clock'
# Event count (approx.): 22868686640
#
# Overhead  Command        Shared Object            Symbol                                                                                                                                                                                                                                                                                                                                                                           
# ........  .............  .......................  .................................................................................................................................................................................................................................................................................................................................................................................
#
    43.29%  graph_alexnet  libarm_compute_core.so   [.] arm_gemm::a64_sgemm_asimd_12x8_jumps
    25.18%  graph_alexnet  libarm_compute_core.so   [.] arm_gemm::a64_sgemv_pretransposed
     5.12%  graph_alexnet  libarm_compute_core.so   [.] arm_compute::NEGEMMInterleavedTransformAWrapperTemplate<float, false>::transform
     4.02%  graph_alexnet  libarm_compute_core.so   [.] (anonymous namespace)::transpose_32bit_elements
     3.93%  graph_alexnet  libarm_compute_core.so   [.] arm_compute::NENormalizationLayerKernel::normalize_float<(arm_compute::DataType)11, 2u, false>
     3.27%  graph_alexnet  libarm_compute_core.so   [.] arm_compute::NEIm2ColKernel::run_generic<float, true>
     3.27%  graph_alexnet  libarm_compute_core.so   [.] arm_gemm::MergeResults<12u, 8u, false, float, float>
     2.83%  graph_alexnet  libarm_compute_core.so   [.] arm_gemm::GemvPretransposed<arm_gemm::sgemv_pretransposed, float, float>::pretranspose_B_array
     2.03%  graph_alexnet  libarm_compute_core.so   [.] arm_compute::NEIm2ColKernel::run_generic<float, false>
     1.55%  graph_alexnet  libarm_compute_core.so   [.] arm_compute::NECol2ImKernel::run_col2im<unsigned int>
     1.41%  graph_alexnet  libarm_compute_core.so   [.] arm_compute::NEPixelWiseMultiplicationKernel::run
     0.57%  graph_alexnet  libarm_compute_core.so   [.] arm_compute::NEActivationLayerKernel::activation<(arm_compute::ActivationLayerInfo::ActivationFunction)2, float>
     0.57%  graph_alexnet  libarm_compute_core.so   [.] arm_compute::NEPoolingLayerKernel::pooling3_f32_nchw<(arm_compute::PoolingType)0, false>
     0.53%  graph_alexnet  [kernel.kallsyms]        [k] clear_page
     0.44%  graph_alexnet  libc-2.24.so             [.] __GI_memset
     0.40%  graph_alexnet  libarm_compute_core.so   [.] (anonymous namespace)::weights_reshape<unsigned int, false>
     0.18%  graph_alexnet  libarm_compute_core.so   [.] (anonymous namespace)::mul_F32_F32_F32_n<false, false>
     0.13%  graph_alexnet  libarm_compute.so        [.] arm_compute::NEGEMM::~NEGEMM@plt
     0.13%  graph_alexnet  libarm_compute_core.so   [.] arm_compute::NEFillBorderKernel::fill_replicate_single_channel<float>
     0.09%  graph_alexnet  [kernel.kallsyms]        [k] __free_pages_ok
     0.09%  graph_alexnet  [kernel.kallsyms]        [k] get_page_from_freelist
     0.04%  graph_alexnet  [kernel.kallsyms]        [k] __cpu_clear_user_page
     0.04%  graph_alexnet  [kernel.kallsyms]        [k] anon_vma_prepare
     0.04%  graph_alexnet  [kernel.kallsyms]        [k] clear_huge_page
     0.04%  graph_alexnet  [kernel.kallsyms]        [k] el0_svc_naked
     0.04%  graph_alexnet  [kernel.kallsyms]        [k] handle_mm_fault
     0.04%  graph_alexnet  [kernel.kallsyms]        [k] mem_cgroup_commit_charge
     0.04%  graph_alexnet  [kernel.kallsyms]        [k] release_pages
     0.04%  graph_alexnet  graph_alexnet            [.] std::__detail::_BracketMatcher<std::__cxx11::regex_traits<char>, false, false>::_M_ready
     0.04%  graph_alexnet  graph_alexnet            [.] std::__detail::_Executor<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::regex_traits<char>, true>::_M_dfs
     0.04%  graph_alexnet  ld-2.24.so               [.] _dl_lookup_symbol_x
     0.04%  graph_alexnet  ld-2.24.so               [.] _dl_relocate_object
     0.04%  graph_alexnet  libarm_compute.so        [.] arm_compute::(anonymous namespace)::Fallback<float, float>::run
     0.04%  graph_alexnet  libarm_compute.so        [.] arm_compute::NEGEMMAssemblyDispatch::run
     0.04%  graph_alexnet  libarm_compute.so        [.] std::_Function_handler<void (arm_compute::ThreadInfo const&), arm_compute::NEGEMMInterleavedWrapper::prepare()::{lambda(arm_compute::ThreadInfo const&)#1}>::_M_invoke
     0.04%  graph_alexnet  libarm_compute_core.so   [.] (anonymous namespace)::transposed_tensor_shape
     0.04%  graph_alexnet  libarm_compute_core.so   [.] arm_compute::NEActivationLayerKernel::run
     0.04%  graph_alexnet  libarm_compute_core.so   [.] arm_compute::NEIm2ColKernel::run_reduced<float>
     0.04%  graph_alexnet  libarm_compute_graph.so  [.] arm_compute::graph::Graph::add_connection
     0.04%  graph_alexnet  libarm_compute_graph.so  [.] arm_compute::graph::GraphManager::execute_graph
     0.04%  graph_alexnet  libpthread-2.24.so       [.] __pthread_mutex_unlock_usercnt
     0.04%  graph_alexnet  libstdc++.so.6.0.22      [.] std::_Rb_tree_increment
     0.04%  graph_alexnet  libstdc++.so.6.0.22      [.] std::_Rb_tree_increment


#
# (Tip: If you prefer Intel style assembly, try: perf annotate -M intel)
#
